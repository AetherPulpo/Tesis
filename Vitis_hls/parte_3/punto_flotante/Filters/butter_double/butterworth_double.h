#include "hls_stream.h"
#include <cmath>
#include "hls_math.h"
const int NEW_DATA_SIZE = 1024;

//coeficientes filtros IIR
//0.000925807705683264490006956215495392826 0.001851615411366530714737388407797880063 0.000925807705683266333150649440852930638 1.000000000000000000000000000000000000000 -1.930771586015336493957761376805137842894 0.935991899767365742590641275455709546804
//1.000000000000000000000000000000000000000 -2.000000000000001776356839400250464677811 1.000000000000001776356839400250464677811 1.000000000000000000000000000000000000000 -1.977859799514897876093755257898010313511 0.978438739540855584309042569657322019339
//SECCION 1
	//Numerador
const double b00 = 0.000925807705683264490006956215495392826;

const double b01 = 0.001851615411366530714737388407797880063;

const double b02 = 0.000925807705683266333150649440852930638;

	//Denominador
const double a01 = -1.930771586015336493957761376805137842894;
const double a02 = 0.935991899767365742590641275455709546804;


//SECCION 2
	//Numerador
const double b10 = 1.0;

const double b11 = -2.000000000000001776356839400250464677811;

const double b12 = 1.000000000000001776356839400250464677811;

	//Denominador
const double a11 = -1.977859799514897876093755257898010313511;

const double a12 = 0.978438739540855584309042569657322019339;


//Funcion que aplica un filtro butterworth
void butterworth_double(hls::stream<float, 1024>& in_amplitude_data,
			 	 	 hls::stream<float, 1024>&  out_iir_data);
