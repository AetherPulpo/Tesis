// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_butterworth_axi_butterworth,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.423540,HLS_SYN_LAT=15395,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1429,HLS_SYN_LUT=1592,HLS_VERSION=2020_2}" *)

module axi_butterworth (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_amplitude_data_V_TDATA,
        in_amplitude_data_V_TVALID,
        in_amplitude_data_V_TREADY,
        out_iir_data_V_TDATA,
        out_iir_data_V_TVALID,
        out_iir_data_V_TREADY
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_pp0_stage1 = 17'd4;
parameter    ap_ST_fsm_pp0_stage2 = 17'd8;
parameter    ap_ST_fsm_pp0_stage3 = 17'd16;
parameter    ap_ST_fsm_pp0_stage4 = 17'd32;
parameter    ap_ST_fsm_pp0_stage5 = 17'd64;
parameter    ap_ST_fsm_pp0_stage6 = 17'd128;
parameter    ap_ST_fsm_pp0_stage7 = 17'd256;
parameter    ap_ST_fsm_pp0_stage8 = 17'd512;
parameter    ap_ST_fsm_pp0_stage9 = 17'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 17'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 17'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 17'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 17'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 17'd32768;
parameter    ap_ST_fsm_state51 = 17'd65536;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_amplitude_data_V_TDATA;
input   in_amplitude_data_V_TVALID;
output   in_amplitude_data_V_TREADY;
output  [31:0] out_iir_data_V_TDATA;
output   out_iir_data_V_TVALID;
input   out_iir_data_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] w01;
reg   [31:0] w02;
reg   [31:0] w11;
reg   [31:0] w12;
reg    in_amplitude_data_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage4;
reg   [0:0] icmp_ln21_reg_258;
reg    out_iir_data_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln21_reg_258_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [31:0] sub24_reg_79;
reg   [31:0] sub24_reg_79_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_state32_pp0_stage0_iter2;
wire    ap_block_state47_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [10:0] j_reg_89;
reg   [31:0] sub245_reg_101;
reg   [31:0] sub1078_reg_112;
reg   [31:0] sub1078_reg_112_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_state41_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] sub107_reg_122;
reg   [31:0] sub107_reg_122_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_state40_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
wire   [31:0] grp_fu_142_p2;
reg   [31:0] reg_160;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_state35_pp0_stage3_iter2;
reg    ap_block_state50_pp0_stage3_iter3;
reg    ap_block_state50_io;
reg    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage11;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
wire    ap_block_state43_pp0_stage11_iter2;
wire    ap_block_pp0_stage11_11001;
reg   [0:0] icmp_ln21_reg_258_pp0_iter1_reg;
wire   [31:0] grp_fu_133_p2;
reg   [31:0] reg_165;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_state34_pp0_stage2_iter2;
reg    ap_block_state49_pp0_stage2_iter3;
reg    ap_block_state49_io;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln21_reg_258_pp0_iter2_reg;
reg   [31:0] reg_171;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_state39_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
wire    ap_block_state44_pp0_stage12_iter2;
wire    ap_block_pp0_stage12_11001;
wire   [0:0] icmp_ln21_fu_192_p2;
wire   [31:0] tmp_fu_198_p1;
reg    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_state36_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] mul1_reg_267;
reg   [31:0] mul4_reg_272;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_state37_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] mul5_reg_277;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_state38_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] mul5_reg_277_pp0_iter1_reg;
reg   [31:0] sub2_reg_282;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
wire    ap_block_state45_pp0_stage13_iter2;
wire    ap_block_pp0_stage13_11001;
wire   [10:0] j_1_fu_203_p2;
reg   [10:0] j_1_reg_288;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
wire    ap_block_state46_pp0_stage14_iter2;
wire    ap_block_pp0_stage14_11001;
reg   [31:0] mul3_reg_293;
reg   [31:0] mul9_reg_298;
reg   [31:0] mul2_reg_303;
wire   [31:0] grp_fu_137_p2;
reg   [31:0] sub1_reg_308;
reg   [31:0] add1_reg_314;
wire    ap_block_pp0_stage14_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_block_pp0_stage3_subdone;
reg    ap_condition_pp0_exit_iter1_state25;
reg   [31:0] ap_phi_mux_sub24_phi_fu_82_p4;
wire    ap_block_pp0_stage0;
reg   [10:0] ap_phi_mux_j_phi_fu_93_p4;
reg   [31:0] ap_phi_mux_sub245_phi_fu_104_p4;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_state33_pp0_stage1_iter2;
wire    ap_block_state48_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_sub1078_phi_fu_115_p4;
wire    ap_block_pp0_stage9;
reg   [31:0] ap_phi_mux_sub107_phi_fu_126_p4;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_state51;
wire    regslice_both_out_iir_data_V_U_apdone_blk;
reg    ap_block_pp0_stage2_01001;
reg   [31:0] grp_fu_133_p0;
reg   [31:0] grp_fu_133_p1;
wire    ap_block_pp0_stage13;
reg   [31:0] grp_fu_137_p0;
reg   [31:0] grp_fu_137_p1;
reg   [31:0] grp_fu_142_p0;
reg   [31:0] grp_fu_142_p1;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [1:0] grp_fu_133_opcode;
reg    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage8_00001;
reg    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage13_00001;
reg    grp_fu_133_ce;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
wire    ap_block_state42_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
reg   [1:0] grp_fu_137_opcode;
reg    grp_fu_137_ce;
reg    grp_fu_142_ce;
reg   [16:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_in_amplitude_data_V_U_apdone_blk;
wire   [31:0] in_amplitude_data_V_TDATA_int_regslice;
wire    in_amplitude_data_V_TVALID_int_regslice;
reg    in_amplitude_data_V_TREADY_int_regslice;
wire    regslice_both_in_amplitude_data_V_U_ack_in;
wire   [31:0] out_iir_data_V_TDATA_int_regslice;
reg    out_iir_data_V_TVALID_int_regslice;
wire    out_iir_data_V_TREADY_int_regslice;
wire    regslice_both_out_iir_data_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 w01 = 32'd0;
#0 w02 = 32'd0;
#0 w11 = 32'd0;
#0 w12 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

axi_butterworth_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_133_p0),
    .din1(grp_fu_133_p1),
    .opcode(grp_fu_133_opcode),
    .ce(grp_fu_133_ce),
    .dout(grp_fu_133_p2)
);

axi_butterworth_faddfsub_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_137_p0),
    .din1(grp_fu_137_p1),
    .opcode(grp_fu_137_opcode),
    .ce(grp_fu_137_ce),
    .dout(grp_fu_137_p2)
);

axi_butterworth_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_142_p0),
    .din1(grp_fu_142_p1),
    .ce(grp_fu_142_ce),
    .dout(grp_fu_142_p2)
);

axi_butterworth_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_amplitude_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_amplitude_data_V_TDATA),
    .vld_in(in_amplitude_data_V_TVALID),
    .ack_in(regslice_both_in_amplitude_data_V_U_ack_in),
    .data_out(in_amplitude_data_V_TDATA_int_regslice),
    .vld_out(in_amplitude_data_V_TVALID_int_regslice),
    .ack_out(in_amplitude_data_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_amplitude_data_V_U_apdone_blk)
);

axi_butterworth_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_iir_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_iir_data_V_TDATA_int_regslice),
    .vld_in(out_iir_data_V_TVALID_int_regslice),
    .ack_in(out_iir_data_V_TREADY_int_regslice),
    .data_out(out_iir_data_V_TDATA),
    .vld_out(regslice_both_out_iir_data_V_U_vld_out),
    .ack_out(out_iir_data_V_TREADY),
    .apdone_blk(regslice_both_out_iir_data_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state25)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_reg_89 <= j_1_reg_288;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_89 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sub1078_reg_112 <= sub107_reg_122_pp0_iter2_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sub1078_reg_112 <= w12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sub107_reg_122 <= sub1_reg_308;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sub107_reg_122 <= w11;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        sub245_reg_101 <= sub24_reg_79_pp0_iter1_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sub245_reg_101 <= w02;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        sub24_reg_79 <= sub2_reg_282;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sub24_reg_79 <= w01;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        add1_reg_314 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln21_reg_258 <= icmp_ln21_fu_192_p2;
        icmp_ln21_reg_258_pp0_iter1_reg <= icmp_ln21_reg_258;
        icmp_ln21_reg_258_pp0_iter2_reg <= icmp_ln21_reg_258_pp0_iter1_reg;
        icmp_ln21_reg_258_pp0_iter3_reg <= icmp_ln21_reg_258_pp0_iter2_reg;
        sub24_reg_79_pp0_iter1_reg <= sub24_reg_79;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        j_1_reg_288 <= j_1_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul1_reg_267 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mul2_reg_303 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mul3_reg_293 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul4_reg_272 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul5_reg_277 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul5_reg_277_pp0_iter1_reg <= mul5_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mul9_reg_298 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_160 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        reg_165 <= grp_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_171 <= grp_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        sub1078_reg_112_pp0_iter2_reg <= sub1078_reg_112;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        sub107_reg_122_pp0_iter2_reg <= sub107_reg_122;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sub1_reg_308 <= grp_fu_137_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        sub2_reg_282 <= grp_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_out_iir_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state51))) begin
        w01 <= sub24_reg_79;
        w02 <= sub245_reg_101;
        w11 <= sub107_reg_122;
        w12 <= sub1078_reg_112;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state25 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state25 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258 == 1'd1) & (1'b0 == ap_block_pp0_stage14_subdone) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_iir_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state51))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_phi_fu_93_p4 = j_1_reg_288;
    end else begin
        ap_phi_mux_j_phi_fu_93_p4 = j_reg_89;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_sub1078_phi_fu_115_p4 = sub107_reg_122_pp0_iter2_reg;
    end else begin
        ap_phi_mux_sub1078_phi_fu_115_p4 = sub1078_reg_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_sub107_phi_fu_126_p4 = sub1_reg_308;
    end else begin
        ap_phi_mux_sub107_phi_fu_126_p4 = sub107_reg_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_sub245_phi_fu_104_p4 = sub24_reg_79_pp0_iter1_reg;
    end else begin
        ap_phi_mux_sub245_phi_fu_104_p4 = sub245_reg_101;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_sub24_phi_fu_82_p4 = sub2_reg_282;
    end else begin
        ap_phi_mux_sub24_phi_fu_82_p4 = sub24_reg_79;
    end
end

always @ (*) begin
    if (((regslice_both_out_iir_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state51))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_133_ce = 1'b1;
    end else begin
        grp_fu_133_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage9_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage13_00001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_133_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage8_00001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_00001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln21_reg_258_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_133_opcode = 2'd0;
    end else begin
        grp_fu_133_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_133_p0 = reg_171;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_133_p0 = mul3_reg_293;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_133_p0 = reg_165;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_133_p0 = tmp_fu_198_p1;
    end else begin
        grp_fu_133_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_133_p1 = mul5_reg_277_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_133_p1 = mul4_reg_272;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_133_p1 = mul1_reg_267;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_133_p1 = reg_160;
    end else begin
        grp_fu_133_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_137_ce = 1'b1;
    end else begin
        grp_fu_137_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_00001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_137_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage13_00001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_00001) & (icmp_ln21_reg_258_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        grp_fu_137_opcode = 2'd0;
    end else begin
        grp_fu_137_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_137_p0 = add1_reg_314;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_137_p0 = sub1_reg_308;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_137_p0 = reg_165;
        end else begin
            grp_fu_137_p0 = 'bx;
        end
    end else begin
        grp_fu_137_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_fu_137_p1 = sub1078_reg_112_pp0_iter2_reg;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_137_p1 = mul2_reg_303;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_137_p1 = mul9_reg_298;
        end else begin
            grp_fu_137_p1 = 'bx;
        end
    end else begin
        grp_fu_137_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_142_ce = 1'b1;
    end else begin
        grp_fu_142_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p0 = sub107_reg_122;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p0 = ap_phi_mux_sub1078_phi_fu_115_p4;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p0 = ap_phi_mux_sub107_phi_fu_126_p4;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_142_p0 = sub2_reg_282;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_142_p0 = sub245_reg_101;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_142_p0 = sub24_reg_79;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_142_p0 = ap_phi_mux_sub245_phi_fu_104_p4;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_142_p0 = ap_phi_mux_sub24_phi_fu_82_p4;
    end else begin
        grp_fu_142_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p1 = 32'd3221225472;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p1 = 32'd1064991478;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_142_p1 = 32'd3221039747;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)))) begin
        grp_fu_142_p1 = 32'd980595175;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_142_p1 = 32'd988983783;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_142_p1 = 32'd1064279338;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_142_p1 = 32'd3220644742;
    end else begin
        grp_fu_142_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_amplitude_data_V_TDATA_blk_n = in_amplitude_data_V_TVALID_int_regslice;
    end else begin
        in_amplitude_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_amplitude_data_V_TREADY_int_regslice = 1'b1;
    end else begin
        in_amplitude_data_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        out_iir_data_V_TDATA_blk_n = out_iir_data_V_TREADY_int_regslice;
    end else begin
        out_iir_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_iir_data_V_TVALID_int_regslice = 1'b1;
    end else begin
        out_iir_data_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((~((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((regslice_both_out_iir_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state49_io) | ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state49_io) | ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state50_io) | ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter3 == 1'b1) & ((1'b1 == ap_block_state50_io) | ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_00001 = ((in_amplitude_data_V_TVALID_int_regslice == 1'b0) & (icmp_ln21_reg_258 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((in_amplitude_data_V_TVALID_int_regslice == 1'b0) & (icmp_ln21_reg_258 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((in_amplitude_data_V_TVALID_int_regslice == 1'b0) & (icmp_ln21_reg_258 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_io = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state49_pp0_stage2_iter3 = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_io = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state50_pp0_stage3_iter3 = ((icmp_ln21_reg_258_pp0_iter3_reg == 1'd0) & (out_iir_data_V_TREADY_int_regslice == 1'b0));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((in_amplitude_data_V_TVALID_int_regslice == 1'b0) & (icmp_ln21_reg_258 == 1'd0));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign icmp_ln21_fu_192_p2 = ((ap_phi_mux_j_phi_fu_93_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign in_amplitude_data_V_TREADY = regslice_both_in_amplitude_data_V_U_ack_in;

assign j_1_fu_203_p2 = (j_reg_89 + 11'd1);

assign out_iir_data_V_TDATA_int_regslice = grp_fu_137_p2;

assign out_iir_data_V_TVALID = regslice_both_out_iir_data_V_U_vld_out;

assign tmp_fu_198_p1 = in_amplitude_data_V_TDATA_int_regslice;

endmodule //axi_butterworth
